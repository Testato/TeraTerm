# 
# Subversion(SVN)の最新リビジョンを取得する
#
# Subversion 1.6で確認 (2009.03.25 yutaka)
#

$svnfile = '../.svn/entries';
$headerfile = '../teraterm/ttpdlg/svnversion.h';

$val = getVersion($svnfile);
print "SVN#: $val\n";

#$val = -1;
makeVersionHeader($val);

exit(0);

sub makeVersionHeader {
	my($rev) = shift(@_);
	my($msg);
	
	if (!open(FP, "> $headerfile")) {
		print "Can not write: $headerfile\n";
		goto error;
	}
	
	if ($val < 0) {
		$msg = '#undef SVNVERSION';
	} else {
		$msg = "#define SVNVERSION	$rev";
	}

	print FP <<EOD;
/* This file was automatically generated by make_svn_revision.pl. 
 * Don't modify this file.
 */
$msg
EOD

	close(FP);
	
	print "Success: $headerfile was created.\n";
	
error:

}

sub getVersion {
	my($file) = shift(@_);
	my($ret) = -1;
	my($line, $count, $inblock, $author);
	
	if (!(-e "$file")) {
		print "Not found: $file\n";
		goto error;
	}
	
	if (!open(FP, "< $file")) {
		print "Can not open: $file\n";
		goto error;
	}
	
	$count = 0;
	$inblock = 0;
	while ($line = <FP>) {
		chomp($line);
		$line =~ s/^\s+//;
		
		if ($inblock == 0) {
			if ($line ne '') {
				# 空白行でない始めの行が来たら、ブロックの開始と見なす。
				$count++;
				$inblock = 1;
			}
		} else {
			if ($line eq '') {
				# ブロックの終わり（空白行）が来たかどうか。
				$inblock = 0;
			}
		}
		
		if ($count == 3) {  # 3つめのブロックに svn info 情報がある。
			if ($line =~ /^\d{4}-\d{2}-\d{2}/) {
				# 一行目は無視
			
			} elsif ($line =~ /^(\d+)/) {  # SVNリビジョン
				$ret = $1;
				
			} elsif ($line =~ /^(\w+)/) {
				if ($ret > 0) {
					$author = $1;
					last;
				}
			}
		}
	
	}
	
	print "$ret $author\n";
	
	close(FP);
	
error:
	return ($ret);
}


